[MITRE ATT&CK All Rules and Techniques Lookup Gen]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
alert.track = 0
cron_schedule = 1 0 * * *
enableSched = 1
search = | rest /services/configs/conf-analyticstories \
| where annotations!="" \
| spath input=annotations path=mitre_attack{} output=mitre_attack \
| eval rule_name=ltrim(title,"savedsearch://") \
| search NOT [| outputlookup mitre_api_rule_technique_lookup append=true create_empty=true] \
| search NOT [| outputlookup mitre_user_rule_technique_lookup append=true create_empty=true] \
| fields rule_name,mitre_attack \
| join rule_name \
    [| rest /services/configs/conf-analyticstories \
    | where searches!="" \
    | eval rule_name=searches \
    | table title,rule_name \
    | eval rule_name=trim(rule_name,"[") \
    | eval rule_name=trim(rule_name,"]") \
    | eval rule_name=split(rule_name,",") \
    | mvexpand rule_name \
    | eval rule_name=trim(rule_name," ") \
    | eval rule_name=trim(rule_name,"\"")\
        ] \
| eval technique_name = if(match(mitre_attack,"^T\d\d\d"),null(), mitre_attack)\
| lookup mitre_tt_lookup technique_name OUTPUT technique_id as tmp_id0\
| eval tmp_id1 = if(match(mitre_attack,"^T\d\d\d"), mitre_attack, null())\
| eval technique_id=coalesce(tmp_id0, tmp_id1)\
| where NOT isnull(technique_id) \
| table rule_name, technique_id \
| inputlookup mitre_user_rule_technique_lookup append=true \
| inputlookup mitre_api_rule_technique_lookup append=true \
| makemv tokenizer="([^\n\s]+)" technique_id \
| mvexpand technique_id \
| dedup rule_name,technique_id \
| join rule_name \
    [| rest services/configs/conf-savedsearches \
    | eval rule_name=title \
    | eval rule_disabled=disabled \
    | rename eai:acl.app as app_name\
    | table rule_name,app_name, rule_disabled\
        ] \
| eval subtechnique_id=if(match(technique_id,"\."),technique_id,null())\
| eval technique_id=if(match(technique_id,"\."),replace(technique_id,"\.\d+",""),technique_id)\
| eval technique_id=mvappend(technique_id,subtechnique_id)\
| mvexpand technique_id\
| dedup rule_name, technique_id, rule_disabled\
| table rule_name, app_name, technique_id, rule_disabled\
| outputlookup mitre_all_rule_technique_lookup

[MITRE ATT&CK Compliance Lookup Gen]
action.email.useNSSubject = 1
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
alert.track = 0
cron_schedule = 5 0 * * *
description = This lookup generator relies on mitre_all_rule_technique_lookup in order to generate a new lookup to properly display MITRE ATT&CK Compliance martix.
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = DA-ESS-MitreContent
request.ui_dispatch_view = search
search = | inputlookup mitre_all_rule_technique_lookup \
| `lookup_technique_tactic_from_rule_name` \
| mvexpand rule_disabled\
| dedup rule_name, technique_id, rule_disabled\
| stats values(technique_id) as technique_id by rule_name, rule_disabled \
| stats count,count(eval(rule_disabled="0")) as enabled_count by technique_id\
| eval enabled_percentage=((enabled_count/count)*100) \
| lookup mitre_tt_lookup technique_id\
| mvexpand technique_name \
| dedup technique_id \
| table technique_id, technique_name, enabled_percentage, enabled_count, count \
| outputlookup mitre_all_rule_compliance_lookup

[MITRE ATT&CK User Rules Compliance Lookup Gen]
action.email.useNSSubject = 1
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
alert.track = 0
cron_schedule = 7 0 * * *
description = This lookup generator relies on mitre_all_rule_technique_lookup in order to generate a new lookup to properly display MITRE ATT&CK Compliance martix with user-defined rules only.
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = DA-ESS-MitreContent
request.ui_dispatch_view = search
search = | inputlookup mitre_all_rule_technique_lookup \
| eval app_rule=app_name."::".rule_name \
| search NOT \
    [| inputlookup mitre_default_rule_lookup \
    | eval app_rule=app_name."::".rule_name \
    | fields app_rule] \
| `lookup_technique_tactic_from_rule_name` \
| mvexpand rule_disabled\
| dedup rule_name, technique_id, rule_disabled\
| stats values(technique_id) as technique_id by rule_name, rule_disabled \
| stats count,count(eval(rule_disabled="0")) as enabled_count by technique_id\
| eval enabled_percentage=((enabled_count/count)*100) \
| lookup mitre_tt_lookup technique_id\
| mvexpand technique_name \
| dedup technique_id \
| table technique_id, technique_name, enabled_percentage, enabled_count, count\
| outputlookup mitre_user_rule_compliance_lookup


[MITRE ATT&CK Get Attack Detection Rules]
action.email.useNSSubject = 1
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.param.verbose = 0
action.threat_add.param.verbose = 0
alert.track = 0
cron_schedule = 9 0 * * *
description = This search command retrieves the latest MITRE ATT&CK framework related correlation searches from api.seynur.com, updates searches and API lookup table.
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.visualizations.show = 0
enableSched = 0
request.ui_dispatch_app = DA-ESS-MitreContent
request.ui_dispatch_view = search
search = | getattackdetectionrules
